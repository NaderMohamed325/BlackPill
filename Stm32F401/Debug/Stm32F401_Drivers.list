
Stm32F401_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000200  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000394  0800039c  0000139c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000394  08000394  0000139c  2**0
                  CONTENTS
  4 .ARM          00000000  08000394  08000394  0000139c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000394  0800039c  0000139c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000394  08000394  00001394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000398  08000398  00001398  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000139c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800039c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800039c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000139c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000653  00000000  00000000  000013cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000012f  00000000  00000000  00001a1f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    000001dc  00000000  00000000  00001b4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000078  00000000  00000000  00001d30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000060  00000000  00000000  00001da8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000008b  00000000  00000000  00001e08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000579  00000000  00000000  00001e93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004280  00000000  00000000  0000240c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000668c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000120  00000000  00000000  000066d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800037c 	.word	0x0800037c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	0800037c 	.word	0x0800037c

080001d4 <SystemInit>:
	{
	__asm("nop");
	}
    }
void SystemInit(void)
    {
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
    // Enable SYSCFG clock
    Set(RCC->APB2ENR, 14, 1);
 80001d8:	4b05      	ldr	r3, [pc, #20]	@ (80001f0 <SystemInit+0x1c>)
 80001da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <SystemInit+0x1c>)
 80001de:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80001e2:	6453      	str	r3, [r2, #68]	@ 0x44
    }
 80001e4:	bf00      	nop
 80001e6:	46bd      	mov	sp, r7
 80001e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	40023800 	.word	0x40023800

080001f4 <GPIO_Init>:

void GPIO_Init(void)
    {
 80001f4:	b480      	push	{r7}
 80001f6:	af00      	add	r7, sp, #0
    // Enable GPIOC clock
    RCC_GPIOC_Enable();
 80001f8:	4b0b      	ldr	r3, [pc, #44]	@ (8000228 <GPIO_Init+0x34>)
 80001fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001fc:	4a0a      	ldr	r2, [pc, #40]	@ (8000228 <GPIO_Init+0x34>)
 80001fe:	f043 0304 	orr.w	r3, r3, #4
 8000202:	6313      	str	r3, [r2, #48]	@ 0x30

    // Configure PC13 as input with pull-up
    Clear(GPIOC->MODER, 26, 3);  // Input mode (00)
 8000204:	4b09      	ldr	r3, [pc, #36]	@ (800022c <GPIO_Init+0x38>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a08      	ldr	r2, [pc, #32]	@ (800022c <GPIO_Init+0x38>)
 800020a:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 800020e:	6013      	str	r3, [r2, #0]
    Set(GPIOC->PUPDR, 26, 1);    // Pull-up (01)
 8000210:	4b06      	ldr	r3, [pc, #24]	@ (800022c <GPIO_Init+0x38>)
 8000212:	68db      	ldr	r3, [r3, #12]
 8000214:	4a05      	ldr	r2, [pc, #20]	@ (800022c <GPIO_Init+0x38>)
 8000216:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800021a:	60d3      	str	r3, [r2, #12]
    }
 800021c:	bf00      	nop
 800021e:	46bd      	mov	sp, r7
 8000220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000224:	4770      	bx	lr
 8000226:	bf00      	nop
 8000228:	40023800 	.word	0x40023800
 800022c:	40020800 	.word	0x40020800

08000230 <EXTI_Init>:

void EXTI_Init(void)
    {
 8000230:	b480      	push	{r7}
 8000232:	af00      	add	r7, sp, #0
    // Connect EXTI Line13 to PC13
    Set(SYSCFG->EXTICR[3], 4, 2);  // PC13 = 0010 for EXTICR[3]
 8000234:	4b0b      	ldr	r3, [pc, #44]	@ (8000264 <EXTI_Init+0x34>)
 8000236:	695b      	ldr	r3, [r3, #20]
 8000238:	4a0a      	ldr	r2, [pc, #40]	@ (8000264 <EXTI_Init+0x34>)
 800023a:	f043 0320 	orr.w	r3, r3, #32
 800023e:	6153      	str	r3, [r2, #20]

    // Configure EXTI Line13
    Set(EXTI->IMR, 13, 1);    // Enable interrupt on line 13
 8000240:	4b09      	ldr	r3, [pc, #36]	@ (8000268 <EXTI_Init+0x38>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a08      	ldr	r2, [pc, #32]	@ (8000268 <EXTI_Init+0x38>)
 8000246:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800024a:	6013      	str	r3, [r2, #0]
    Set(EXTI->FTSR, 13, 1);   // Falling trigger for line 13
 800024c:	4b06      	ldr	r3, [pc, #24]	@ (8000268 <EXTI_Init+0x38>)
 800024e:	68db      	ldr	r3, [r3, #12]
 8000250:	4a05      	ldr	r2, [pc, #20]	@ (8000268 <EXTI_Init+0x38>)
 8000252:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000256:	60d3      	str	r3, [r2, #12]
    }
 8000258:	bf00      	nop
 800025a:	46bd      	mov	sp, r7
 800025c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop
 8000264:	40013800 	.word	0x40013800
 8000268:	40013c00 	.word	0x40013c00

0800026c <NVIC_Init>:

void NVIC_Init(void)
    {
 800026c:	b480      	push	{r7}
 800026e:	af00      	add	r7, sp, #0
    // Enable EXTI15_10 interrupt in NVIC
    Set(NVIC->ISER[1], 8, 1);  // EXTI15_10 is IRQ 40, which is bit 8 in ISER[1]
 8000270:	4b05      	ldr	r3, [pc, #20]	@ (8000288 <NVIC_Init+0x1c>)
 8000272:	685b      	ldr	r3, [r3, #4]
 8000274:	4a04      	ldr	r2, [pc, #16]	@ (8000288 <NVIC_Init+0x1c>)
 8000276:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800027a:	6053      	str	r3, [r2, #4]
    }
 800027c:	bf00      	nop
 800027e:	46bd      	mov	sp, r7
 8000280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000284:	4770      	bx	lr
 8000286:	bf00      	nop
 8000288:	e000e100 	.word	0xe000e100

0800028c <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
    {
 800028c:	b480      	push	{r7}
 800028e:	af00      	add	r7, sp, #0
    if (Read(EXTI->PR, 13))  // Check if EXTI Line13 triggered the interrupt
 8000290:	4b0b      	ldr	r3, [pc, #44]	@ (80002c0 <EXTI15_10_IRQHandler+0x34>)
 8000292:	695b      	ldr	r3, [r3, #20]
 8000294:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000298:	2b00      	cmp	r3, #0
 800029a:	d00b      	beq.n	80002b4 <EXTI15_10_IRQHandler+0x28>
	{
	// Toggle LED (assuming PC14 is connected to an LED)
	Toggle(GPIOC->ODR, 14, 1);
 800029c:	4b09      	ldr	r3, [pc, #36]	@ (80002c4 <EXTI15_10_IRQHandler+0x38>)
 800029e:	695b      	ldr	r3, [r3, #20]
 80002a0:	4a08      	ldr	r2, [pc, #32]	@ (80002c4 <EXTI15_10_IRQHandler+0x38>)
 80002a2:	f483 4380 	eor.w	r3, r3, #16384	@ 0x4000
 80002a6:	6153      	str	r3, [r2, #20]

	// Clear the EXTI pending bit
	Set(EXTI->PR, 13, 1);
 80002a8:	4b05      	ldr	r3, [pc, #20]	@ (80002c0 <EXTI15_10_IRQHandler+0x34>)
 80002aa:	695b      	ldr	r3, [r3, #20]
 80002ac:	4a04      	ldr	r2, [pc, #16]	@ (80002c0 <EXTI15_10_IRQHandler+0x34>)
 80002ae:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80002b2:	6153      	str	r3, [r2, #20]
	}
    }
 80002b4:	bf00      	nop
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop
 80002c0:	40013c00 	.word	0x40013c00
 80002c4:	40020800 	.word	0x40020800

080002c8 <main>:

int main(void)
    {
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0
    // Initialize system
    SystemInit();
 80002cc:	f7ff ff82 	bl	80001d4 <SystemInit>

    // Initialize GPIO
    GPIO_Init();
 80002d0:	f7ff ff90 	bl	80001f4 <GPIO_Init>

    // Initialize EXTI
    EXTI_Init();
 80002d4:	f7ff ffac 	bl	8000230 <EXTI_Init>

    // Initialize NVIC
    NVIC_Init();
 80002d8:	f7ff ffc8 	bl	800026c <NVIC_Init>

    while (1)
 80002dc:	bf00      	nop
 80002de:	e7fd      	b.n	80002dc <main+0x14>

080002e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e0:	480d      	ldr	r0, [pc, #52]	@ (8000318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e4:	f7ff ff76 	bl	80001d4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e8:	480c      	ldr	r0, [pc, #48]	@ (800031c <LoopForever+0x6>)
  ldr r1, =_edata
 80002ea:	490d      	ldr	r1, [pc, #52]	@ (8000320 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ec:	4a0d      	ldr	r2, [pc, #52]	@ (8000324 <LoopForever+0xe>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f0:	e002      	b.n	80002f8 <LoopCopyDataInit>

080002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f6:	3304      	adds	r3, #4

080002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002fc:	d3f9      	bcc.n	80002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fe:	4a0a      	ldr	r2, [pc, #40]	@ (8000328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000300:	4c0a      	ldr	r4, [pc, #40]	@ (800032c <LoopForever+0x16>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000304:	e001      	b.n	800030a <LoopFillZerobss>

08000306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000308:	3204      	adds	r2, #4

0800030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800030c:	d3fb      	bcc.n	8000306 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030e:	f000 f811 	bl	8000334 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000312:	f7ff ffd9 	bl	80002c8 <main>

08000316 <LoopForever>:

LoopForever:
  b LoopForever
 8000316:	e7fe      	b.n	8000316 <LoopForever>
  ldr   r0, =_estack
 8000318:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800031c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000320:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000324:	0800039c 	.word	0x0800039c
  ldr r2, =_sbss
 8000328:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800032c:	2000001c 	.word	0x2000001c

08000330 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000330:	e7fe      	b.n	8000330 <ADC_IRQHandler>
	...

08000334 <__libc_init_array>:
 8000334:	b570      	push	{r4, r5, r6, lr}
 8000336:	4d0d      	ldr	r5, [pc, #52]	@ (800036c <__libc_init_array+0x38>)
 8000338:	4c0d      	ldr	r4, [pc, #52]	@ (8000370 <__libc_init_array+0x3c>)
 800033a:	1b64      	subs	r4, r4, r5
 800033c:	10a4      	asrs	r4, r4, #2
 800033e:	2600      	movs	r6, #0
 8000340:	42a6      	cmp	r6, r4
 8000342:	d109      	bne.n	8000358 <__libc_init_array+0x24>
 8000344:	4d0b      	ldr	r5, [pc, #44]	@ (8000374 <__libc_init_array+0x40>)
 8000346:	4c0c      	ldr	r4, [pc, #48]	@ (8000378 <__libc_init_array+0x44>)
 8000348:	f000 f818 	bl	800037c <_init>
 800034c:	1b64      	subs	r4, r4, r5
 800034e:	10a4      	asrs	r4, r4, #2
 8000350:	2600      	movs	r6, #0
 8000352:	42a6      	cmp	r6, r4
 8000354:	d105      	bne.n	8000362 <__libc_init_array+0x2e>
 8000356:	bd70      	pop	{r4, r5, r6, pc}
 8000358:	f855 3b04 	ldr.w	r3, [r5], #4
 800035c:	4798      	blx	r3
 800035e:	3601      	adds	r6, #1
 8000360:	e7ee      	b.n	8000340 <__libc_init_array+0xc>
 8000362:	f855 3b04 	ldr.w	r3, [r5], #4
 8000366:	4798      	blx	r3
 8000368:	3601      	adds	r6, #1
 800036a:	e7f2      	b.n	8000352 <__libc_init_array+0x1e>
 800036c:	08000394 	.word	0x08000394
 8000370:	08000394 	.word	0x08000394
 8000374:	08000394 	.word	0x08000394
 8000378:	08000398 	.word	0x08000398

0800037c <_init>:
 800037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037e:	bf00      	nop
 8000380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000382:	bc08      	pop	{r3}
 8000384:	469e      	mov	lr, r3
 8000386:	4770      	bx	lr

08000388 <_fini>:
 8000388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038a:	bf00      	nop
 800038c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038e:	bc08      	pop	{r3}
 8000390:	469e      	mov	lr, r3
 8000392:	4770      	bx	lr
